openapi: 3.0.0
info:
  description: Colección de API para el proyecto
  version: 1.0.0
  title: Sistale Foro API
servers:
  - url: https://sistaleapi.onrender.com/v1
  #- url: http://localhost:4000/v1
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Articulo:
      type: object
      properties:
        id:
          type: string
        titulo:
          type: string
        contenido:
          type: string
        username:
          type: string
        categoria:
          type: string
    Comentario:
      type: object
      properties:
        id:
          type: string
        contenido:
          type: string
        idArticulo:
          type: string
        username:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        role:
          type: string

security:
  - BearerAuth: []

paths:
  /articulo:
    post:
      tags:
        - Artículo
      summary: Crear artículo
      description: Crea un nuevo artículo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                contenido:
                  type: string
                categoria:
                  type: string
      responses:
        '201':
          description: Artículo creado exitosamente
        '400':
          description: Datos inválidos
      security:
        - BearerAuth: []
  /articulo/{idArticulo}:
    get:
      tags:
        - Artículo
      summary: Obtener artículo por ID
      description: Obtiene los detalles de un artículo específico
      parameters:
        - name: idArticulo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Artículo encontrado
        '404':
          description: Artículo no encontrado

    patch:
      tags:
        - Artículo
      summary: Actualizar artículo
      description: Actualiza los detalles de un artículo específico
      parameters:
        - name: idArticulo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                contenido:
                  type: string
      responses:
        '200':
          description: Artículo actualizado exitosamente
        '404':
          description: Artículo no encontrado
      security:
        - BearerAuth: []
    delete:
      tags:
        - Artículo
      summary: Eliminar artículo
      description: Elimina un artículo específico
      parameters:
        - name: idArticulo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Artículo eliminado exitosamente
        '404':
          description: Artículo no encontrado
      security:
        - BearerAuth: []
  /articulos:
    get:
      tags:
        - Artículo
      summary: Listar artículos
      description: Recupera una lista de artículos
      parameters:
        - name: page
          in: query
          description: Número de páginas para la paginación
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: Tamaño de la página para la paginación
          required: false
          schema:
            type: integer
        - name: categoria
          in: query
          description: Filtrar por categoría
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Artículos listados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  articulos:
                    type: array
                    items:
                      $ref: '#/components/schemas/Articulo'
        '404':
          description: No se encontraron artículos
  /register:
    post:
      tags:
        - Autenticación
      summary: Registro de usuario
      description: Permite registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Registro exitoso
        '400':
          description: Datos inválidos
  /login:
    post:
      tags:
        - Autenticación
      summary: Autenticación de usuario
      description: Permite a un usuario autenticarse en la aplicación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Autenticación exitosa
        '401':
          description: Credenciales inválidas
  /change-password:
    put:
      tags:
        - Autenticación
      summary: Cambiar contraseña
      description: Permite cambiar la contraseña del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña cambiada exitosamente
        '400':
          description: Datos inválidos
      security:
        - BearerAuth: []
  /change-password-recovery:
    put:
      tags:
        - Autenticación
      summary: Cambiar contraseña con recuperación
      description: Permite cambiar la contraseña mediante recuperación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña cambiada exitosamente
        '400':
          description: Datos inválidos
      security:
        - BearerAuth: []
  /recover-password:
    post:
      tags:
        - Autenticación
      summary: Recuperar contraseña
      description: Enviar correo de recuperación de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Correo de recuperación enviado
        '400':
          description: Datos inválidos
  /users:
    get:
      tags:
        - Autenticación
      summary: Obtener todos los usuarios
      description: Recupera una lista de todos los usuarios
      responses:
        '200':
          description: Usuarios listados exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: No se encontraron usuarios
      security:
        - BearerAuth: []
  /user/{username}:
    delete:
      tags:
        - Autenticación
      summary: Eliminar usuario
      description: Elimina un usuario específico
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado
      security:
        - BearerAuth: []
  /{username}/role:
    patch:
      tags:
        - Autenticación
      summary: Actualizar rol de usuario
      description: Actualiza el rol de un usuario específico
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newRole:
                  type: string
      responses:
        '200':
          description: Rol de usuario actualizado exitosamente
        '404':
          description: Usuario no encontrado
      security:
        - BearerAuth: []
  /comentario:
    post:
      tags:
        - Comentario
      summary: Crear comentario
      description: Crea un nuevo comentario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idArticulo:
                  type: string
                contenido:
                  type: string  
      responses:
        '201':
          description: Comentario creado exitosamente
        '400':
          description: Datos inválidos
      security:
        - BearerAuth: []
  /comentario/{idComentario}:
    get:
      tags:
        - Comentario
      summary: Obtener comentario por ID
      description: Obtiene los detalles de un comentario específico
      parameters:
        - name: idComentario
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comentario encontrado
        '404':
          description: Comentario no encontrado
    patch:
      tags:
        - Comentario
      summary: Actualizar comentario
      description: Actualiza los detalles de un comentario específico
      parameters:
        - name: idComentario
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contenido:
                  type: string
      responses:
        '200':
          description: Comentario actualizado exitosamente
        '404':
          description: Comentario no encontrado
      security:
        - BearerAuth: []
    delete:
      tags:
        - Comentario
      summary: Eliminar comentario
      description: Elimina un comentario específico
      parameters:
        - name: idComentario
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comentario eliminado exitosamente
        '404':
          description: Comentario no encontrado
      security:
        - BearerAuth: []
  /comentarios/{idArticulo}:
    get:
      tags:
        - Comentario
      summary: Listar comentarios por artículo
      description: Recupera una lista de comentarios para un artículo específico
      parameters:
        - name: idArticulo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comentarios listados exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comentario'
        '404':
          description: No se encontraron comentarios
